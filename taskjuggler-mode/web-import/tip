(:summary    "Editing Taskjuggler Files"
 :created    "2008"
 :updated    "2008"
 :license    "GPL-2"
 :provided   (taskjuggler-mode)
 :keywords   ("user" "files" "part")
 :homepage   "http://www.skamphausen.de/cgi-bin/ska/taskjuggler-mode"
 :wikipage   "http://www.emacswiki.org/Taskjuggler"
 :commentary "\
This is a major mode which can be used to write files for
taskjuggler.  See http://www.taskjuggler.org for that scheduling
software. 
The version 2.4.1 of taskjuggler shipped with a tiny emacs lisp
file called taskjug.el.  From this I have taken the indentation
function.  All the rest was written from scratch, thus the new name
of the file: taskjuggler-mode.el
So it's kudos to Sean Dague (http://dague.net) for that older
version.  In his code he praised Scott Andrew Borton for writing a
very good tutorial on writing modes.

Webpage: http://www.skamphausen.de/cgi-bin/ska/taskjuggler-mode

FIXMEs
* The parser is called too often!
* The parser should be able to return several results in one call
* Cleanup repetion of task vs resources.
* Handling of multi-file documents (includes in the parser)
* What about buffer local variants of tasks and resources?
* support supplement

TODO
* Context-sensitive highlighting, e.g. columns in reports
* Ad-Hoc highlighting of things in buffer, e.g. task names,
  resource names.
* Viewing of results, either using TaskjugglerUI or HTML-reports

More Ideas
* Sorting of tasks in a context: by name, by priority
* Highlighting of priority according to value
* Validation of dependencies")
