(:summary    "Simple file navigation using [[WikiStrings]]"
 :created    "2011"
 :updated    "20110529"
 :authors    (("D Roland Walker" . "walker@pobox.com"))
 :maintainer ("D Roland Walker" . "walker@pobox.com")
 :provided   (wiki-nav)
 :required   ((("emacs" font-lock)
	       (nil button-lock)))
 :keywords   ("mouse" "button" "hyperlink" "navigation")
 :homepage   "http://www.emacswiki.org/WikiNavMode"
 :wikipage   "http://www.emacswiki.org/WikiNavMode"
 :commentary "\
Table of Contents

[[Intro]]
[[Example usage]]
[[See Also]]
[[Prior Art]]
[[Notes]]
[[Bugs]]
[[Compatibility]]
[[Todo]]
[[License]]
[[Code]]


[[<Intro]]

Wiki-nav.el is a minor mode which recognizes [[wiki-style]]
double-bracketed navigation links in any type of file, providing
the ability to jump between sections, between files, or open
external links.

Wiki-nav.el requires button-lock.el, which in turn requires
font-lock.el.  Font-lock.el is provided with Emacs.
Button-lock.el is available here

   https://github.com/rolandwalker/button-lock

[[<Example usage]]

    Add the following to your ~/.emacs

       (require 'wiki-nav)
       (global-wiki-nav-mode 1)

    and sprinkle

       [[links]]

    throughout your files.  That's it.  There's more functionality,
    but simple [[links]] may be all you need.

    Clicking a [[link]] will invoke a text search for the next
    matching link.  Double-clicking a link will search for matching
    links in all open buffers.

    Text matching between links is always case-insensitive.

    To navigate upward to a previous matching link, add a '<'
    symbol before the search text

       [[<links]]

    You can insert the '>' symbol, too, but that simply indicates
    the default forward-search navigation.

    Both foward and backward navigation will wrap around the ends
    of the file without prompting.

    Leading and trailing space inside a link is ignored.

    After navigating to a new location, wiki-nav gives a helpful
    transient flash to help you find the cursor.  If you find this
    annoying, it can be changed by customizing wiki-nav-flash-delay.

    From the keyboard:

       control-c w   skip foward in the buffer to the next link

       control-c W   skip backward in the buffer to the previous link

       return        if positioned on a link, activate it

       tab           if positioned on a link, skip forward in the
                     buffer to the next link of any kind (need not
                     match the current link)

       S-tab         if positioned on a link, skip backward in the
                     buffer to the previous link of any kind (need not
                     not match the current link)

Advanced usage:

    Bracketed links may contain external URLs

       [[http://google.com]]

    Or they may use various internally-recognized URI schemes:

    visit: navigates to another file

       [[visit:/etc/hosts]]

       [[visit:/path/to/another/file:NameOfLink]]

    func: navigates to the definition of a function

       [[func:main]]

    line: navigates to a line number

       [[line:12]]

    visit: may be combined with other schemes:

       [[visit:/path/to/another/file:func:main]]

       [[visit:/etc/hosts:line:5]]

    Path names and simialar strings are subjected to URI-style
    unescaping before lookup.  To link a filename which contains a
    colon, substitute \"%3A\" for the colon character.

    See the documentation for the function wiki-nav for more
    information.

[[<See Also]]

    M-x customize-group RET wiki-nav RET

[[<Prior Art]]

    linkd.el
    David O'Toole <dto@gnu.org>

    org-mode
    Carsten Dominik <carsten at orgmode dot org>

[[<Notes]]

    wiki-nav uses industry-standard left-clicks rather than
    Emacs-traditional middle clicks.

    It is difficult to edit the text inside a link using the
    mouse.  To make a link inactive, position the point after the
    link and backspace into it.  Once the trailing delimiters have
    been modified, the link reverts to ordinary text.

[[<Bugs]]

    Double-square-brackets represent a valid construct in some
    programming languages, and may be mistakenly linked.  Workaround:
    don't click.  Second workaround: change delimiters to triple-
    square-brackets via customize.

    Newlines are not escaped in regexp fields in customize.

    Case-sensitivity on matching the delimiters is unknown because
    it depends on how font-lock-defaults was called for the current
    mode.  However, this is not an issue unless the default delimiters
    are changed to use alphabetical characters.

    Auto-complete interacts and causes keyboard interaction
    problems.  Auto-complete should be suppressed if the point is
    on a link?

[[<Compatibility]]

    Tested only on GNU Emacs version 23.x

[[<Todo]]

   remember position and undo last motion

   visit:-1 counts from end of file

   keyboard analog for double-click

   right-click context menu

   link any string <<<text>>> together within a file
   like org-mode radio links

   use pulse if present for more subtle flash overlay

   patch font-lock to support keyword searching in comment only,
   like 'keep, only different

   raised button style option

   break down monolithic dispatch function wiki-nav-action-1

   schemes to add
      search:
      regexp:
      elisp:

[[<License]]

   Simplified BSD License

   Copyright (c) 2011, D Roland Walker
   All rights reserved.

   Redistribution and use in source and binary forms, with or
   without modification, are permitted provided that the following
   conditions are met:

      1. Redistributions of source code must retain the above
         copyright notice, this list of conditions and the following
         disclaimer.

      2. Redistributions in binary form must reproduce the above
         copyright notice, this list of conditions and the following
         disclaimer in the documentation and/or other materials
         provided with the distribution.

   This software is provided by D Roland Walker \"AS IS\" and any express
   or implied warranties, including, but not limited to, the implied
   warranties of merchantability and fitness for a particular
   purpose are disclaimed.  In no event shall D Roland Walker or
   contributors be liable for any direct, indirect, incidental,
   special, exemplary, or consequential damages (including, but not
   limited to, procurement of substitute goods or services; loss of
   use, data, or profits; or business interruption) however caused
   and on any theory of liability, whether in contract, strict
   liability, or tort (including negligence or otherwise) arising in
   any way out of the use of this software, even if advised of the
   possibility of such damage.

   The views and conclusions contained in the software and
   documentation are those of the authors and should not be
   interpreted as representing official policies, either expressed
   or implied, of D Roland Walker.

[[<Code]]")
