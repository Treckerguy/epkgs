(:summary    "A minor mode for frame-relative buffer lists"
 :created    "2011"
 :updated    "2011"
 :license    "GPL-2"
 :authors    (("Alp Aker" . "aker@pitt.edu"))
 :maintainer ("Alp Aker" . "aker@pitt.edu")
 :provided   (locales)
 :keywords   ("convenience")
 :homepage   "http://www.emacswiki.org/Locales"
 :wikipage   "http://www.emacswiki.org/Locales"
 :commentary "\
Locales extends Emacs's buffer menu so that it understands a distinction
between those buffers that \"belong\" to a frame and those that do not.  The
buffer menu can be toggled between a list of all buffers and a list of
only buffers that are local to a frame.  In addition, buffers can be added
to and removed from the frame-local buffer list from within the buffer
menu; buffers can also be made non-local interactively using the function
`locales-make-non-local'.  (See below under Usage for a fuller description
of these features.)  All functions of the default buffer menu remain
available.

Locales also alters the behavior of `other-buffer' so that, e.g., the
default buffer suggested by `switch-to-buffer' is, when possible, a
frame-local buffer.  It also respects any re-ordering of buffers that
results from the use of bury-buffer.

The package does not alter the buffer-list frame parameter or change the
result of calls to the function `buffer-list'.

The criteria for which buffers are automatically added to the local buffer
list can be controlled via several variables; see the documentation string
of `locales-mode' for a list of these (or see below under Usage).  See the
documentation string of the command `locales-buffer-menu' for a fuller
description of the new commands available in the buffer menu itself (or
see below under Usage).

Caveats
=======

PLEASE NOTE:  Locales does not presently work if you have `pop-up-frames'
set to non-nil.  Fixing that is on the todo list.

PLEASE ALSO NOTE: Locales is a relatively new package (I've used it
privately for some time, but have only recently cleaned it up for public
distribution).  It's therefore likely to conflict with other extensions to
the buffer-menu.  If you encounter any such problems, please send me a
note so I can ensure compatibility.

Installation
============

Put this file in your load path and put:

  (require 'locales)

in your .emacs.  To toggle locales mode on and off, use the command
`locales-mode'.  To turn it on automatically when starting emacs, put:

 (locales-mode t) 

in your .emacs.  

When locales mode is enabled, C-x C-b is globally mapped to call
`locales-list-buffers'.  When disabled, the key sequence is remapped to
its default value `list-buffers'.

You might also wish to bind the command `locales-make-non-local' while
locales mode is enabled (see below, under Usage, for a description of this
command).  To bind it to, e.g, C-c -, add the following two forms to your
.emacs:

 (add-hook 'locales-mode-on-hook
            (global-set-key [(control ?c) ?-] 'locales-make-non-local))
 (add-hook 'locales-mode-off-hook
            (global-set-key [(control ?c) ?-] 'undefined))


Usage
=====

Locales operates fairly transparently.  A call to the buffer menu command
using C-x C-b opens a new buffer menu.  By default it lists only buffers
local to the selected frame (we call this `local mode').  By typing `a'
one can toggle between listing only local buffers and listing all buffers
(we call the latter `global mode').  In global mode, there is a fourth
column in the buffer menu after the C, R, M columns: the L
column.  Buffers local to the current frame are indicated with an `o' in
this column (this indicator bit can be changed via
`locales-local-bit').  In local mode, the fourth column is
suppressed.  The variable `locales-open-in-global-mode' can be used to
control whether the buffer menu opens in local or global mode.

All commands available in the default buffer menu are still available,
including sorting by buffer name, buffer size, etc., or toggling the
files-only.

Besides toggling between local and global modes, two other new commands
are available in the buffer menu.  By typing `+' a file can be marked as
to be added to the local buffer list.  By typing `-' a file can be marked
as to be removed from the local buffer list.  As with other actions in the
buffer menu, these changes take effect when buffer-menu-execute is
called.  (NB: They are also executed when toggling between local and global
modes.)  When a buffer is made non-local, it is removed from any windows
on the current frame displaying that buffer and replaced with another
frame-local buffer.

Buffers can also be made non-local outside the buffer menu.  The command
`locales-make-non-local' can be called interactively to remove a buffer
from the local buffer list; when called with no argument, it acts on the
current buffer.  (Locales does not, by default, bind this command to any
key-sequence.)

The association between buffers and frames is dynamic:  if a buffer is
selected on a frame, then it is considered to be local to the
frame.  (Note, then, that a buffer can be local to more than one frame.)
In addition, several other criteria can be used to control the membership
of a frame's local list:

o If `locales-include-scratch' is non-nil, then *scratch* is always added
  to the local buffer list.

o If `locales-include-displayed-buffers' is non-nil, then buffers that are
  merely displayed on a frame are considered to be local to the frame,
  even if they have not been selected.

o The variables `locales-include-new-buffers' and
  `locales-include-init-buffer' control which buffers are local to a newly
  created frame.  If the command that creates a new frame also creates new
  buffers, then one might want those buffers to count as local to the new
  frame.  If `locales-include-new-buffers' is non-nil, then such buffers
  are added to the new frame's local buffer list, even if they have not
  been selected or displayed.  (NB: This applies only to buffers that are
  created *after* the new frame is created.)

  If `locales-include-init-buffer' is non-nil, then the buffer that is
  current when the command creating a new frame is called (the
  `init-buffer') will belong to the new frame.  If nil, it will not.  (NB:
  Other criteria take precedence over this variable.  If the init-buffer
  is selected after the new frame is created, then it will belong to the
  new frame.  Similarly, if `locales-include displayed-buffers' is non-nil
  and the init-buffer is displayed in some window when the frame-creating
  command terminates, then the init-buffer will belong to the new frame.)


Interaction with Other Default Functions and Other Packages
==========================================================

Locales does not touch the buffer-list or buried-buffer-list frame
parameters, nor change the results of any call to the function
`buffer-list'.  It sets each frame's buffer predicate so that other-buffer
will prefer buffers local to the frame; if another buffer predicate is
present when the package is enabled, locales saves that predicate and uses
it as well.

If you wish to access a frame's local buffer list directly for some
purpose, it is recommended that you use the list returned by the function
`locales-buffer-list'; don't use the value of the locales-buffer-list
frame parameter.  The latter can contain both dead buffers and internal
buffers (buffers whose names starts with a space). In addition, its order
is meaningless.  The list returned by `locales-buffer-list' will contain
only live, non-internal buffers, sorted stably by selection order on the
current frame.")
