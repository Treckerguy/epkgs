(:summary    "Auto indent Minor mode"
 :repository (git . "git://github.com/mlf176f2/auto-indent-mode.el.git")
 :created    "20101106"
 :updated    "20111128"
 :license    "GPL-3"
 :authors    (("Matthew L. Fidler, Le Wang & Others"))
 :maintainer ("Matthew L. Fidler")
 :provided   (auto-indent-mode)
 :required   ((("cl" cl)))
 :keywords   (auto indentation)
 :homepage   "https://github.com/mlf176f2/auto-indent-mode.el"
 :commentary "\
Provides auto-indentation minor mode.  This allows the following:

 (1) Return automatically indents the code appropriately (if enabled)

 (2) Pasting/Yanking indents the appropriately

 (3) Killing line will take off unneeded spaces (if enabled)

 (4) On visit file, indent appropriately, but DONT SAVE. (Pretend like
 nothing happened, if enabled)

 (5) On save, optionally unttabify, remove trailing white-spaces, and
 definitely indent the file (if enabled).

 (6) TextMate behavior of keys if desired (see below)

 (7) Deleting the end of a line will shrink the whitespace to just
 one (if desired and enabled)

 (8) Automatically indent sexp, if desired `auto-indent-after-begin-or-finish-sexp'

 All of these options can be customized. (customize auto-indent)

 To use put this in your load path and then put the following in your emacs
 file:

 (setq auto-indent-on-visit-file t) ;; If you want auto-indent on for files
 (require 'auto-indent-mode)

 If you (almost) always want this on, add the following to ~/.emacs:

 (auto-indent-global-mode)

 Excluded modes are defined in `auto-indent-disabled-modes-list'

 If you only want this on for a single mode, you would add the following to
 ~/.emacs

 (add-hook 'emacs-lisp-mode-hook 'auto-indent-minor-mode)

 You could always turn on the minor mode with the command
 `auto-indent-minor-mode'

 If you would like TextMate behavior of Meta-RETURN going to the
 end of the line and then inserting a newline, as well as
 Meta-shift return going to the end of the line, inserting a
 semi-colon then inserting a newline, use the following:


 (setq auto-indent-key-for-end-of-line-then-newline \"<M-return>\")
 (setq auto-indent-key-for-end-of-line-insert-char-then-newline \"<M-S-return>\")
 (require 'auto-indent-mode)
 (auto-indent-global-mode)

 This may or may not work on your system.  Many times emacs cannot
 distinguish between M-RET and M-S-RET, so if you don't mind a
 slight redefinition use:

 (setq auto-indent-key-for-end-of-line-then-newline \"<M-return>\")
 (setq auto-indent-key-for-end-of-line-insert-char-then-newline \"<C-M-return>\")
 (require 'auto-indent-mode)
 (auto-indent-global-mode)


 If you want to insert something other than a semi-colon (like a
 colon) in a specific mode, say colon-mode, do the following:

 (add-hook 'colon-mode-hook (lambda () (setq auto-indent-eol-char \":\")))


 If you wish to use this with autopairs and yasnippet, please load
 this library first.

 Also if you wish to just use specific functions from this library
 that is possible as well.

 To have the auto-indentation-paste use:

 (autoload 'auto-indent-yank \"auto-indent-mode\" \"\" t)
 (autoload 'auto-indent-yank-pop \"auto-indent-mode\" \"\" t)

 (define-key global-map [remap yank] 'auto-indent-yank)
 (define-key global-map [remap yank-pop] 'auto-indent-yank-pop)

 (autoload 'auto-indent-delete-char \"auto-indent-mode\" \"\" t)
 (define-key global-map [remap delete-char] 'auto-indent-delete-char)

 (autoload 'auto-indent-kill-line \"auto-indent-mode\" \"\" t)
 (define-key global-map [remap kill-line] 'auto-indent-kill-line)

 However, this does not honor the excluded modes in
 `auto-indent-disabled-modes-list'")
