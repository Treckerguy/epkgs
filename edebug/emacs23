(:summary    "A source-level debugger for Emacs Lisp"
 :created    "1988"
 :updated    "2011"
 :license    "GPL-3"
 :authors    (("Daniel LaLiberte" . "liberte@holonexus.org"))
 :maintainer ("FSF")
 :provided   (edebug)
 :required   ((("cl" cl-specs)
	       ("easymenu" easymenu)
	       (nil edebug-cl-read)))
 :keywords   ("lisp" "maint" "tools")
 :commentary "\
This minor mode allows programmers to step through Emacs Lisp
source code while executing functions.  You can also set
breakpoints, trace (stopping at each expression), evaluate
expressions as if outside Edebug, reevaluate and display a list of
expressions, trap errors normally caught by debug, and display a
debug style backtrace.

Minimal Instructions
=====================

First evaluate a defun with C-M-x, then run the function.  Step
through the code with SPC, mark breakpoints with b, go until a
breakpoint is reached with g, and quit execution with q.  Use the
\"?\" command in edebug to describe other commands.
See the Emacs Lisp Reference Manual for more details.

If you wish to change the default edebug global command prefix, change:
(setq edebug-global-prefix \"\\C-xX\")

Edebug was written by
Daniel LaLiberte
GTE Labs
40 Sylvan Rd
Waltham, MA  02254
liberte@holonexus.org")
