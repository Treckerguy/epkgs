(:summary    "Manage bookmarks in HTML"
 :created    "1999"
 :updated    "2000"
 :license    "GPL-2"
 :authors    (("Tom Breton" . "tob@world.std.com"))
 :maintainer ("Tom Breton" . "tob@world.std.com")
 :keywords   (hypermedia)
 :homepage   "http://panix.com/~tehom"
 :commentary "\
After you used your web browser for a while, a few months perhaps,
bookmarking pages as you go, you probably noticed that you had a
mess of bookmarks in no particular order, unorganized or barely
organized.

You can read the bookmark files easily enuff in emacs, and moving a
bookmark or two is easy, but managing the whole mess is a chore, if
you do it at all.  I basically didn't for a long time, and when I
decided to do it properly, it was such a chore that I wrote this
package to make it easier.

NB: You have to work kind of the way I work, moving bookmarks from
the accumulating files your browser writes into permanent storage,
one list in <ol></ol> to a file.  This code is a little more
user-friendly than the earlier version, but you still need clue
about HTML and bookmarks.

Prerequisites:

psgml (http://www.lysator.liu.se/projects/about_psgml.html)

tehom-psgml.el, my extensions to psgml

cl, the Common Lisp emulation.

tehom-4.el

You need to have sgml-custom-dtd set up so that \"html\" inserts the
html doctype.  See the psgml docs.

If you want to rearrange bookmarks on the fly, you need my
`arrange' package.

You need to basically work the same way I do; see above.

Installation

If you want to handle Netscape-style bookmarks, you must customize
`hbmk-fake-netscape-dtd-file' to point to the fake Netscape
bookmark dtd that comes with hbmk.

You probably want to customize `hbmk-bookmark-directory' to point
to wherever you will keep your new bookmark files.

Usage:

Open a file of bookmarks that was written by either Lynx or
Netscape.  Put point before a bookmark of interest and call
`hbmk-process-next-bookmark'.

You will be prompted for a file to put that bookmark in.  If the
file doesn't exist, hbmk will create it.  The bookmark will be
moved into that file if possible.

The files hbmk creates will always place the bookmarks in an
ordered list in HTML.

If it is tiresome to call `hbmk-process-next-bookmark' repeatedly,
use `hbmk-process-many', which will repeat until it is aborted or
encounters something it can't handle.  

To add a destination manually, `hbmk-add-destination-file' prompts
you for a filename, which then is available as a destination for
clippings.

`hbmk-add-reference' creates a reference at point to an HTML file.
If that file doesn't already exist, it will be created and filled
out appropriately.  It expects the point to be in an ordered HTML
list, <ol></ol>.  You use `hbmk-add-reference' when editing a file
that should contain a link to the new file, which usually means
you're making some sort of index file that indexes lesser pages.

The older function `hbmk-dispatch-region' deletes the currently
selected region and pastes it to a destination which the user
selects from a list.  It could still be useful for
non-machine-structured text.

`hbmk-bookmark-url-at-point' and `hbmk-create-bookmark' are useful
for handling bookmarks that are not already in HTML.
`hbmk-create-bookmark' is completely interactive: You type the url
and the description.  `hbmk-bookmark-url-at-point' uses the url at
point.")
