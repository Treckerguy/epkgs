(:repository (bzr . "http://bazaar.launchpad.net/~irie/ibus.el/trunk/")
 :created    "2010"
 :updated    "2010"
 :license    "GPL-3"
 :authors    (("S. Irie"))
 :maintainer ("S. Irie")
 :provided   (ibus)
 :keywords   ("input method")
 :homepage   "https://launchpad.net/ibus.el"
 :wikipage   "http://www.emacswiki.org/IBusMode"
 :commentary "\
IBus is a new input method framework under active development
which is designed to overcome the limitations of SCIM.

IBus uses D-Bus protocol for communication between the ibus-daemon
and clients (engines, panel, config tools). Since the components
run in separate processes there is enhanced modularity and stability.
Client processes can be loaded, started and stopped independently.
The input method engines and clients can be written in any language
with a dbus binding.

ibus.el is a IBus client for GNU Emacs. This program allows users
on-the-spot style input with IBus. The input statuses are
individually kept for each buffer, and prefix-keys such as C-x and
C-c can be used even if IBus is active. So you can input various
languages fast and comfortably by using it.

This program is *not* a part of IBus.


Requirements:

 * GNU Emacs 22 or 23
 * IBus (Version 1.2.0 or later)
 * python-xlib

Note that ibus-mode works only when Emacs is running under X session.


Installation:

First, save this file as ibus.el and byte-compile in
a directory that is listed in load-path, and also save
ibus-el-agent somewhere in your system.

Put the following in your .emacs file:

  (require 'ibus)
  (add-hook 'after-init-hook 'ibus-mode-on)

If ibus.el and ibus-el-agent are saved in different
directories, add a setting to the above as follows:

  (setq ibus-agent-file-name \"/PATH/TO/ibus-el-agent\")

To disable XIM in Emacs, put the following in ~/.Xresources:

  Emacs*useXIM: false

and restart X session or execute a shell command:

  xrdb ~/.Xresources


Here is the example of settings in .emacs:

  (require 'ibus)
  ;; Turn on ibus-mode automatically after loading .emacs
  (add-hook 'after-init-hook 'ibus-mode-on)
  ;; Use C-SPC for Set Mark command
  (ibus-define-common-key ?\\C-\\s nil)
  ;; Use C-/ for Undo command
  (ibus-define-common-key ?\\C-/ nil)
  ;; Change cursor color depending on IBus status
  (setq ibus-cursor-color '(\"red\" \"blue\" \"limegreen\"))")
