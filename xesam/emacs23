(:summary    "Xesam interface to search engines"
 :created    "2008"
 :updated    "2011"
 :license    "GPL-3"
 :authors    (("Michael Albinus" . "michael.albinus@gmx.de"))
 :maintainer ("Michael Albinus" . "michael.albinus@gmx.de")
 :provided   (xesam)
 :required   ((("cl" cl)
	       ("dbus" dbus)
	       ("timer" timer)
	       ("url" url)
	       ("widget" wid-edit widget)))
 :keywords   ("tools" "hypermedia")
 :commentary "\
This package provides an interface to Xesam, a D-Bus based \"eXtEnsible
Search And Metadata specification\".  It has been tested with

xesam-glib 0.3.4, xesam-tools 0.6.1
beagle 0.3.7, beagle-xesam 0.2
strigi 0.5.11

The precondition for this package is a D-Bus aware Emacs.  This is
configured per default, when Emacs is built on a machine running
D-Bus.  Furthermore, there must be at least one search engine
running, which supports the Xesam interface.  Beagle and strigi have
been tested; tracker, pinot and recoll are also said to support
Xesam.  You can check the existence of such a search engine by

  (dbus-list-queued-owners :session \"org.freedesktop.xesam.searcher\")

In order to start a search, you must load xesam.el:

  (require 'xesam)

xesam.el supports two types of queries, which are explained *very* short:

* Full text queries.  Just search keys shall be given, like

    hello world

  A full text query in xesam.el is restricted to files.

* Xesam End User Search Language queries.  The Xesam query language
  is described at <http://xesam.org/main/XesamUserSearchLanguage>,
  which must be consulted for the whole features.

  A query string consists of search keys, collectors, selectors,
  and phrases.  Search keys are words like in a full text query:

    hello word

  A selector is a tuple <keyword><relation>.  <keyword> can be any
  predefined Xesam keyword, the most common keywords are \"ext\"
  (file name extension), \"format \" (mime type), \"tag\" (user
  keywords) and \"type\" (types of items, like \"audio\", \"file\",
  \"picture\", \"attachment\").  <relation> is a comparison to a value,
  which must be a string (relation \":\" or \"=\") or number (relation
  \"<=\", \">=\", \"<\", \">\"):

    type:attachment ext=el

  A collector is one of the items \"AND\", \"and\", \"&&\", \"OR\", \"or\",
  \"||\", or \"-\".  The default collector on multiple terms is \"AND\";
  \"-\" means \"AND NOT\".

    albinus -type:file

  A phrase is a string enclosed in quotes, with appended modifiers
  (single letters).  Examples of modifiers are \"c\" (case
  sensitive), \"C\" (case insensitive), \"e\" (exact match), \"r\"
  (regular expression):

    \"Hello world\"c

You can customize, whether you want to apply a Xesam user query, or
a full text query.  Note, that not every search engine supports
both query types.

  (setq xesam-query-type 'fulltext-query)

Another option to be customised is the number of hits to be
presented at once.

  (setq xesam-hits-per-page 50)

A search can be started by the command

  M-x xesam-search

When several search engines are registered, the engine to be used
can be selected via minibuffer completion.  Afterwards, the query
shall be entered in the minibuffer.

Search results are presented in a new buffer.  This buffer has the
major mode `xesam-mode', with the following keybindings:

  SPC	`scroll-up'
  DEL	`scroll-down'
  <		`beginning-of-buffer'
  >		`end-of-buffer'
  q		`quit-window'
  z		`kill-this-buffer'
  g		`revert-buffer'

The search results are represented by widgets.  Navigation commands
are the usual widget navigation commands:

  TAB	`widget-forward'
  <backtab>	`widget-backward'

Applying RET, <down-mouse-1>, or <down-mouse-2> on a URL belonging
to the widget, brings up more details of the search hit.  The way,
how this hit is presented, depends on the type of the hit.  HTML
files are opened via `browse-url'.  Local files are opened in a new
buffer, with highlighted search hits (highlighting can be toggled
by `xesam-minor-mode' in that buffer).")
