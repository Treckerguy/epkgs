(:summary    "Delete the region (selection) upon char insertion or DEL"
 :created    "19951201"
 :updated    "20110224"
 :license    "GPL-2"
 :authors    (("Matthieu Devin" . "devin@lucid.com"))
 :maintainer ("D. ADAMS")
 :provided   (delsel)
 :required   ((("cl" cl)))
 :keywords   (abbrev convenience emulations local)
 :commentary "\
Let DEL delete the region; let character insertion replace it.

 Makes the active region be pending a deletion, meaning that text
 inserted while the region is active will replace the region
 contents, and that operations like `delete-backward-char' will
 delete the region.

 `C-g' is bound here to `minibuffer-keyboard-quit' in each of the
 minibuffer-local-*-map's.


 Property `delete-selection':

 Commands that delete the selection need a `delete-selection'
 property on their symbols. Commands that insert text but do not
 have this property do not delete the selection.  The property can
 be one of these values:

 `yank' - For commands that do a yank. Ensures that the region
          about to be deleted is not yanked.

 `supersede' - Delete the active region and ignore the current command:
          the command just deletes the region.

 `kill' - `kill-region' is used on the selection, rather than
          `delete-region'.  Text selected with the mouse is
          typically yankable anyway.

 anything else non-nil - Deletes the active region prior to
          executing the command, which inserts replacement
          text. This is the usual case.


The original author is Matthieu Devin <devin@lucid.com>.
This version was modified by Drew Adams.

Main changes here from the original:
-----------------------------------

1. Added function `delete-selection-pre-hook-1'.  In fact,
   `delete-selection-pre-hook' was renamed to
   `delete-selection-pre-hook-1', and a new version of
   `delete-selection-pre-hook' was defined in terms of it.
   This allowed change #2 (next).
2. Fixed bug: `completion.el' was making things like SPC and `.'
   lose on self insert here.
3. Will now work in tandem with `completion.el':
   a. `delete-active-region': Deletes latest completion only.
      During completion, don't delete region when self-insert.
   b. `delete-selection-pre-hook': In case of completion, makes
      mark active.
4. `minibuffer-keyboard-quit':
   Removes any windows showing *Completions* buffer.
5. `delete-selection-mode': Informs user of new state.

You might want to do something like the following in your .emacs:

      (make-variable-buffer-local 'transient-mark-mode)
      (put 'transient-mark-mode 'permanent-local t)
      (setq-default transient-mark-mode t)")
