(:summary    "Indents TSQL (and other SQL) statements"
 :created    "2003"
 :updated    "2003"
 :license    "GPL-2"
 :authors    (("Tom Pierce" . "tom@pierceport.com"))
 :maintainer ("Tom Pierce" . "tom@pierceport.com")
 :provided   (tsql-indent)
 :required   ((("sql" sql)))
 :keywords   (languages sql tsql)
 :homepage   "http://www.emacswiki.org/TsqlIndent"
 :wikipage   "http://www.emacswiki.org/TsqlIndent"
 :commentary "\
tsql-indent indents SQL statements and was specifically written to
indent Microsoft Transact SQL code.  Indentation of the current
line is based upon indentation of previous lines and looking
backward through the code for indentation hints.

Lines will be indented to the same indentation level of the
previous line unless the previous line is a begin, is part of a
select statement, or the current line is an end statement.  If the
previous line is a begin statement, the current line will be
indented to the right compared to the begin statement.  If the
previous line is part of a select statement, the select statement
is indented so that all portions of the select statement line up to
the same tab stop.  If the current line is an end statement, then
it will be outdented compared to the previous line.

Code inspection is performed via one of several regular
expressions.  These regular expressions are defined in
customization variables.

Installation

This library should be loaded once SQL mode has finished loading.
One way to accomplish this is to add the following to your .emacs
file:

(eval-after-load \"sql\"
  '(load-library \"tsql-indent\"))

Once the library is loaded, all SQL mode buffers from that point
forward will use this indentation function.

Inspiration

The inspiration for this code came from \"sql-indent\" by Alex
Schroeder (http://www.emacswiki.org/cgi-bin/wiki.pl?SqlIndent).
Also, an excellent tutorial on indenation in \"An Emacs language
mode creation tutorial\"
(http://two-wugs.net/emacs/mode-tutorial.html).")
