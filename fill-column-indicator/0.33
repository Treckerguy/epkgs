(:summary    "Graphically indicate the fill column"
 :created    "2011"
 :updated    "2011"
 :license    "GPL-2"
 :authors    (("Alp Aker" . "aker@pitt.edu"))
 :maintainer ("Alp Aker" . "aker@pitt.edu")
 :provided   (fill-column-indicator)
 :keywords   ("convenience")
 :homepage   "http://www.emacswiki.org/FillColumnIndicator"
 :wikipage   "http://www.emacswiki.org/FillColumnIndicator"
 :commentary "\
Many modern editors and IDEs can graphically indicate the location of the
fill column, either by shading the area to the right of the fill column or
by drawing a thin line (in design parlance, a `rule') down the length of
the editing window.  Fill-column-indicator implements both of these
facilities in Emacs. 

Installation
============

Put this file in your load path and put 

  (require 'fill-column-indicator)

in your .emacs.  

Usage
=====

To toggle graphical indication of the fill column in a buffer, use the
command `fci-mode'.

Fill-column-indicator has two modes of operation:

o In shading mode, it shades the portion of the window to the right of the
  fill column.  This is the default.

o In rule mode, it draws a thin line at the fill column.

The mode of operation is controlled by the variable `fci-style'; the
recognized values are 'shading and 'rule.  If you'd like fci-mode to use a
rule by default, put

  (setq fci-style 'rule) 

in your .emacs.  (Buffer-local values of fci-style are supported.)

Configuration:  Shading Style
=============================

The appearance of the shading is controlled by the face `fci-shading'; its
attributes can be set like those of any face.

Configuration:  Rule Style
==========================

On window systems the rule is drawn using an image generated by fci-mode;
the rule's width (in pixels) is determined by the variable
`fci-rule-width'.  On character terminals the rule is drawn using the
character specified by `fci-rule-character'.  In both cases the color is
controlled by `fci-rule-color'.  If you'd like the rule to be drawn using
fci-rule-character even on graphical displays, set
`fci-always-use-textual-rule' to a non-nil value.

The image formats used by fci-mode are XPM, PBM, and XBM.  By default, it
tries to use use them in that order.  You can specify a particular format
by setting `fci-rule-image-format' to either 'xpm, 'xpm, or 'xbm.

Other Options
=============

When `truncate-lines' is nil, the effect of drawing a fill-column
indicator is very odd looking. Indeed, in a window with continuation
lines, it makes little sense to indicate the position of the fill column
relative to the window edge (think about what it would mean to talk about
\"the\" location of the fill column in that case).  For this reason,
fci-mode sets truncate-lines to t in buffers in which it is enabled and
restores it to its previous value when disabled.  You can turn off this
feature by setting `fci-handle-truncate-lines' to nil.

If `line-move-visual' is t, then vertical navigation can behave oddly in
several edge cases while fci-mode is enabled (I think this is due to a bug
in pos_visible_p).  Accordingly, fci-mode locally sets line-move-visual to
nil when enabled and restores it when disabled.  This can be suppressed by
setting `fci-handle-line-move-visual' to nil.  (But you shouldn't want to
do this.  There's no reason to use line-move-visual if truncate-lines is
t, and it doesn't make sense to use something like fci-mode when
truncate-lines is nil.)

Troubleshooting
===============

o If the fill-column indication is misaligned on some lines but otherwise
  looks normal, then you're most likely not displaying the buffer contents
  with a monospaced font.  Check whether the lines in question contain
  non-ascii characters that are wider or shorter than the normal character
  width.  Also, be aware that certain font-lock themes set some faces so
  that they look monospaced but aren't quite so.

o If the rule appears as a dashed (rather than uninterrupted) line on
  window systems, try changing the image format. (See the above section on
  configuring the rule style indicator.)

o If the terminal type does not support at least inverse video, then
  shading is impossible, and you should set fci-style to 'rule.

o Although the XBM format is natively supported by Emacs, the
  implementation on some ports is incomplete; the v23 and v24 Mac OS X
  ports are examples.  On these systems XBM images are always drawn in the
  foreground color of the frame's default face, in which case one cannot
  control the color of the rule.  Use XPM or PBM images instead.

Known Issues
============

o The indicator extends only to end of the buffer contents (as opposed to
  running the full length of the editing window).

o If the buffer contents do not end in a newline, then the indicator
  extends only to the penultimate line.

o When using shading style on a character terminal, lines that fall one
  character short of the window border show the frame background color in
  the last column instead of shading.  (This appears to be an artifact of
  the mechanism that displays truncation and line continuation glyphs; I
  don't know how to fix it from within Lisp.)

Todo
====

o Play well with outline minor mode and other forms of folding
  (nxml-outln, etc.).")
