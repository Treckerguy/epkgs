(:summary    "Make abbreviations more usable"
 :created    "1995"
 :updated    "2011"
 :license    "GPL-3"
 :authors    (("Frederic Lepied" . "frederic.lepied@sugix.frmug.org"))
 :maintainer ("Frederic Lepied" . "frederic.lepied@sugix.frmug.org")
 :provided   (expand)
 :keywords   ("abbrev")
 :commentary "\
This package defines abbrevs which expand into structured constructs
for certain languages.  The construct is indented for you,
and contains slots for you to fill in other text.

These abbrevs expand only at the end of a line and when not in a comment
or a string.

  Look at the Sample: section for emacs-lisp, perl and c expand lists.
For example for c-mode, you could declare your abbrev table with :

(defconst c-expand-list
  '((\"if\" \"if () {\\n \\n} else {\\n \\n}\" (5 10 21))
    (\"ifn\" \"if () {}\" (5 8))
    (\"uns\" \"unsigned \")
    (\"for\" \"for(; ; ) {\\n\\n}\" (5 7 9 13))
    (\"switch\" \"switch () {\\n\\n}\" (9 13))
    (\"case\" \"case :\\n\\nbreak;\\n\" (6 8 16))
    (\"do\" \"do {\\n\\n} while ();\" (6 16))
    (\"while\" \"while () {\\n\\n}\" (8 12))
    (\"default\" \"default:\\n\\nbreak;\" 10)
    (\"main\" \"int\\nmain(int argc, char * argv[])\\n{\\n\\n}\\n\" 37))
  \"Expansions for C mode\")

  and enter Abbrev mode with the following hook :

(add-hook 'c-mode-hook
	  (lambda ()
	    (expand-add-abbrevs c-mode-abbrev-table c-expand-list)
	    (abbrev-mode 1)))

  you can also init some post-process hooks :

(add-hook 'expand-load-hook
	  (lambda ()
	    (add-hook 'expand-expand-hook 'indent-according-to-mode)
	    (add-hook 'expand-jump-hook 'indent-according-to-mode)))

Remarks:

  Many thanks to Heddy Boubaker <boubaker@cenatls.cena.dgac.fr>,
                 Jerome Santini <santini@chambord.univ-orleans.fr>,
                 Jari Aalto <jaalto@tre.tele.nokia.fi>.

  Please send me a word to give me your feeling about this feature or
to explain me how you use it (your expansions table for example) using
the function expand-submit-report.")
