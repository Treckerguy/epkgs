(:summary    "Automatic file copying"
 :created    "1993"
 :updated    "2011"
 :license    "GPL-3"
 :authors    (("Boris Goldowsky" . "boris@gnu.org"))
 :maintainer ("Boris Goldowsky" . "boris@gnu.org")
 :provided   (shadowfile)
 :required   ((("ange-ftp" ange-ftp)))
 :keywords   (comm files)
 :wikipage   "http://www.emacswiki.org/ShadowFile"
 :commentary "\
This package helps you to keep identical copies of files in more than one
 place - possibly on different machines.  When you save a file, it checks
 whether it is on the list of files with \"shadows\", and if so, it tries to
 copy it when you exit Emacs (or use the shadow-copy-files command).

Installation & Use:

 Add clusters (if necessary) and file groups with shadow-define-cluster,
 shadow-define-literal-group, and shadow-define-regexp-group (see the
 documentation for these functions for information on how and when to use
 them).  After doing this once, everything should be automatic.

 The lists of clusters and shadows are saved in a file called .shadows,
 so that they can be remembered from one Emacs session to another, even
 (as much as possible) if the Emacs session terminates abnormally.  The
 files needing to be copied are stored in .shadow_todo; if a file cannot
 be copied for any reason, it will stay on the list to be tried again
 next time.  The .shadows file should itself have shadows on all your
 accounts so that the information in it is consistent everywhere, but
 .shadow_todo is local information and should have no shadows.

 If you do not want to copy a particular file, you can answer \"no\" and
 be asked again next time you hit C-x 4 s or exit Emacs.  If you do not
 want to be asked again, use shadow-cancel, and you will not be asked
 until you change the file and save it again.  If you do not want to
 shadow that file ever again, you can edit it out of the .shadows
 buffer.  Anytime you edit the .shadows buffer, you must type M-x
 shadow-read-files to load in the new information, or your changes will
 be overwritten!

Bugs & Warnings:

 - It is bad to have two emacses both running shadowfile at the same
 time.  It tries to detect this condition, but is not always successful.

 - You have to be careful not to edit a file in two locations
 before shadowfile has had a chance to copy it; otherwise
 \"updating shadows\" will overwrite one of the changed versions.

 - It ought to check modification times of both files to make sure
 it is doing the right thing.  This will have to wait until
 file-newer-than-file-p works between machines.

 - It will not make directories for you, it just fails to copy files
 that belong in non-existent directories.

 Please report any bugs to me (boris@gnu.org).  Also let me know
 if you have suggestions or would like to be informed of updates.")
