(:summary    "Convert buffer text and decorations to HTML"
 :created    "2009"
 :updated    "2009"
 :license    "GPL-2"
 :authors    (("Hrvoje Niksic" . "hniksic@xemacs.org"))
 :maintainer ("Hrvoje Niksic" . "hniksic@xemacs.org")
 :provided   (htmlize)
 :required   ((("emacs" cl custom)))
 :keywords   ("hypermedia" "extensions")
 :homepage   "http://fly.srk.fer.hr/~hniksic/"
 :wikipage   "http://www.emacswiki.org/Htmlize"
 :commentary "\
This package converts the buffer text and the associated
decorations to HTML.  Mail to <hniksic@xemacs.org> to discuss
features and additions.  All suggestions are more than welcome.

To use this, just switch to the buffer you want HTML-ized and type
`M-x htmlize-buffer'.  You will be switched to a new buffer that
contains the resulting HTML code.  You can edit and inspect this
buffer, or you can just save it with C-x C-w.  `M-x htmlize-file'
will find a file, fontify it, and save the HTML version in
FILE.html, without any additional intervention.  `M-x
htmlize-many-files' allows you to htmlize any number of files in
the same manner.  `M-x htmlize-many-files-dired' does the same for
files marked in a dired buffer.

htmlize supports three types of HTML output, selected by setting
`htmlize-output-type': `css', `inline-css', and `font'.  In `css'
mode, htmlize uses cascading style sheets to specify colors; it
generates classes that correspond to Emacs faces and uses <span
class=FACE>...</span> to color parts of text.  In this mode, the
produced HTML is valid under the 4.01 strict DTD, as confirmed by
the W3C validator.  `inline-css' is like `css', except the CSS is
put directly in the STYLE attribute of the SPAN element, making it
possible to paste the generated HTML to other documents.  In `font'
mode, htmlize uses <font color=\"...\">...</font> to colorize HTML,
which is not standard-compliant, but works better in older
browsers.  `css' mode is the default.

You can also use htmlize from your Emacs Lisp code.  When called
non-interactively, `htmlize-buffer' and `htmlize-region' will
return the resulting HTML buffer, but will not change current
buffer or move the point.

I tried to make the package elisp-compatible with multiple Emacsen,
specifically aiming for XEmacs 19.14+ and GNU Emacs 19.34+.  Please
let me know if it doesn't work on some of those, and I'll try to
fix it.  I relied heavily on the presence of CL extensions,
especially for cross-emacs compatibility; please don't try to
remove that particular dependency.  When byte-compiling under GNU
Emacs, you're likely to get some warnings; just ignore them.

The latest version should be available at:

       <http://fly.srk.fer.hr/~hniksic/emacs/htmlize.el>

You can find a sample of htmlize's output (possibly generated with
an older version) at:

       <http://fly.srk.fer.hr/~hniksic/emacs/htmlize.el.html>

Thanks go to the multitudes of people who have sent reports and
contributed comments, suggestions, and fixes.  They include Ron
Gut, Bob Weiner, Toni Drabik, Peter Breton, Thomas Vogels, Juri
Linkov, Maciek Pasternacki, and many others.

User quotes: \"You sir, are a sick, sick, _sick_ person. :)\"
                 -- Bill Perry, author of Emacs/W3")
