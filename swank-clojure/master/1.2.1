(:summary    "Slime adapter for clojure"
 :created    "2010"
 :updated    "2010"
 :license    "GPL"
 :authors    (("Jeffrey Chu" . "jochu0@gmail.com")
	      ("Phil Hagelberg" . "technomancy@gmail.com"))
 :maintainer ("Jeffrey Chu" . "jochu0@gmail.com")
 :provided   (swank-clojure)
 :required   ((("clojure-mode" clojure-mode)
	       ("emacs" assoc)
	       ("slime" slime)))
 :keywords   ("languages" "lisp")
 :homepage   "https://github.com/technomancy/swank-clojure"
 :commentary "\
NOTE: swank-clojure.el is currently unmaintained. Please see the
swank-clojure readme for examples of how to start a swank server
from your build tool and connect to it via SLIME.

The purpose of this file is to set up `slime-lisp-implementations'
to allow SLIME to communicate with the Swank server implemented in
Clojure. There are four ways to launch a session:

1. Standalone: If you just hit M-x slime, swank-clojure will
   download the jars for Clojure, contrib, and swank-clojure,
   launch an instance, and connect to it. If you just want to try
   out Clojure, this is all you need. Just get Swank Clojure
   through package.el (http://tromey.com/elpa) and stop reading here.

2. Custom classpath: If you want to hack on Clojure or Contrib, set
   swank-clojure-classpath to a list of paths to the jars you want to
   use and then hit M-x slime.

3. Project: Put your project's dependencies (either manually or using
   Leiningen or Maven) in the directory named by
   `swank-clojure-project-dep-path' (lib/ by default), then launch M-x
   swank-clojure-project. Note that the directory must contain
   swank-clojure.jar, it will not automatically be added to the
   classpath as it was in past versions that had to run from a checkout.

4. Standalone Server: Users of leiningen or clojure-maven-plugin
   can launch a server from a shell
   (http://wiki.github.com/technomancy/leiningen/emacs-integration)
   and connect to it from within Emacs using M-x slime-connect.")
