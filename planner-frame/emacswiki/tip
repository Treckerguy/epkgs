(:summary    "Devote a frame to the Planner"
 :created    "2005"
 :updated    "2005"
 :license    "GPL-2"
 :provided   (planner-frame)
 :required   ((("planner" planner)))
 :commentary "\
I find it helpful to look at my planner within one frame, taking up
the only window of that frame.  I want to treat the Planner as an
application in the sense of giving it its own frame and dealing
with that frame intelligently.  I've been thus far dissatisfied
with other approaches (e.g., `C-x 5 2 RET M-x plan'), so I decided
to try my hand at making an extension of planner that does things
the way I want.

What is the way I want?  Answer: gnus.  The code that follows is
based on the way that gnus regards itself as an application: it
provides a function `gnus-other-frame' for reading mail and news in
a distinguished frame, `gnus-exit-gnus' to save one's configuration
and stop reading mail and news and, and `gnus-suspend-gnus' for
making the interface go away temporarily while leaving most of its
state intact.  I also find it easy to deal with emacs-w3m, which I
regard as another emacs application.

Currently planner doesn't seem to fit this way of thinking (or at
least: I wasn't smart enough or informed enough to see how Planner
could be viewed this way), so I created planner-frame.  The purpose
is to enable one to think of the Planner as an emacs application in
a way similar to how one can view gnus and emacs-w3m as emacs
applications.  (A good deal of the code here is directly adapted,
if not outright copied, from gnus.  We have here yet another case
where the ability to study and adapt code from other applications
was a source of enlightenment, satisfaction, and, I hope, value to
others.)

The user functions are `plan-other-frame',
`planner-suspend-planner', and `planner-exit-planner'.  I've also
added a couple new keybindings for the latter two functions.  By
analogy with gnus, for these two \"quit\" functions I've created the
hooks `planner-exit-planner-hook' and
`planner-suspend-planner-hook'.  Customize
`planner-frame-parameters' to modify the frame produced by
`plan-other-frame'.


To get started, simply add the form

  (require 'planner-frame)

to your emacs initialization file.  The function `plan-other-frame'
will then get your started planning in a distinguished planner
frame.

Todo

- Integrate with `planner.el'

It could be valuable to somehow integrate the code here with
`planner.el', ala gnus, which provides `gnus-other-frame' and its
supporting code alongside `gnus'.

- Offer a way to make the planner frame permanently visible.

- Launch applications in other frames

It would be nice to make things so that following links to data
outside the Planner project (either in the emacs-wiki or muse
sense) pops up a new frame.  The idea here is to make the Planner,
in its own frame, a kind of repellant force: the only things that
really go in that frame are Planner pages; trying to go outside the
planner lands one in a different frame.  Enforcing such
restrictions could be helpful; thus there would be little chance of
getting distracted, with one's planner pages buried deep uneath a
pile of erc, bbdb, message, and other buffers.  It would allow one
to better focus on planning and what needs to be done.  It would
make the Planner a kind of omnipresent application.

- Integration with other applications

(Alert: vague rambling follows.)  My idea is to somehow collect PIM
applications together.  The Planner isn't the only one: there's the
diary and the calendar (already an example of two PIM applications
working together), the BBDB, timeclock, and so on.  Somehow it
would be nice to gather these together in a single package.  Of
course already there is quite a lot of glue between these provided
by Planner; that's the purpose of, for example, remember with its
annotation functions.  But it seems to me that the connections
could be even tighter.  One sense in which the connections could be
tighter is the frame and window code; it would be great if,
somehow, Planner were the uber-application in its own frame, and it
had some \"servant\" frames.


I'd love to hear how you've used planner-frame.el, and how you
think it can be improved!  My email address is at the beginning of
the file.")
