(:summary    "Yet another snippet extension for Emacs"
 :created    "2008"
 :updated    "2009"
 :license    "GPL-2"
 :authors    ((nil . "joaotavora@gmail.com"))
 :maintainer (nil . "joaotavora@gmail.com")
 :provided   (yasnippet yasnippet-debug)
 :required   ((("assoc" assoc)
	       ("cl" cl)
	       ("emacs" easymenu help-mode))
	      (("dropdown-list" dropdown-list)))
 :keywords   (convenience emulation)
 :homepage   "http://code.google.com/p/yasnippet"
 :wikipage   "Yasnippet"
 :commentary "\
Basic steps to setup:

  1. In your .emacs file:
       (add-to-list 'load-path \"/dir/to/yasnippet.el\")
       (require 'yasnippet)
  2. Place the `snippets' directory somewhere.  E.g: ~/.emacs.d/snippets
  3. In your .emacs file
       (setq yas/snippet-dirs \"~/.emacs/snippets\")
       (yas/load-directory yas/snippet-dirs)
  4. To enable the YASnippet menu and tab-trigger expansion
       M-x yas/minor-mode
  5. To globally enable the minor mode in *all* buffers
       M-x yas/global-mode

  Steps 4. and 5. are optional, you don't have to use the minor
  mode to use YASnippet.

  Interesting variables are:

      `yas/snippet-dirs'

          The directory where user-created snippets are to be
          stored. Can also be a list of directories. In that case,
          when used for bulk (re)loading of snippets (at startup or
          via `yas/reload-all'), directories appearing earlier in
          the list shadow other dir's snippets. Also, the first
          directory is taken as the default for storing the user's
          new snippets.

          The deprecated `yas/root-directory' aliases this variable
          for backward-compatibility.

      `yas/extra-modes'

          A local variable that you can set in a hook to override
          snippet-lookup based on major mode. It is a a symbol (or
          list of symbols) that correspond to subdirectories of
          `yas/snippet-dirs' and is used for deciding which
          snippets to consider for the active buffer.

          Deprecated `yas/mode-symbol' aliases this variable for
          backward-compatibility.

  Major commands are:

      M-x yas/expand

          Try to expand snippets before point.  In `yas/minor-mode',
          this is bound to `yas/trigger-key' which you can customize.

      M-x yas/load-directory

          Prompts you for a directory hierarchy of snippets to load.

      M-x yas/insert-snippet

          Prompts you for possible snippet expansion if that is
          possible according to buffer-local and snippet-local
          expansion conditions.  With prefix argument, ignore these
          conditions.

      M-x yas/find-snippets

          Lets you find the snippet files in the correct
          subdirectory of `yas/snippet-dirs', according to the
          active major mode (if it exists) like
          `find-file-other-window'.

      M-x yas/visit-snippet-file

          Prompts you for possible snippet expansions like
          `yas/insert-snippet', but instead of expanding it, takes
          you directly to the snippet definition's file, if it
          exists.

      M-x yas/new-snippet

          Lets you create a new snippet file in the correct
          subdirectory of `yas/snippet-dirs', according to the
          active major mode.

      M-x yas/load-snippet-buffer

          When editing a snippet, this loads the snippet.  This is
          bound to \"C-c C-c\" while in the `snippet-mode' editing
          mode.

      M-x yas/tryout-snippet

          When editing a snippet, this opens a new empty buffer,
          sets it to the appropriate major mode and inserts the
          snippet there, so you can see what it looks like.  This is
          bound to \"C-c C-t\" while in `snippet-mode'.

      M-x yas/describe-tables

          Lists known snippets in a separate buffer. User is
          prompted as to whether only the currently active tables
          are to be displayed, or all the tables for all major
          modes.

  The `dropdown-list.el' extension is bundled with YASnippet, you
  can optionally use it the preferred \"prompting method\", puting in
  your .emacs file, for example:

      (require 'dropdown-list)
      (setq yas/prompt-functions '(yas/dropdown-prompt
                                   yas/ido-prompt
                                   yas/completing-prompt))

  Also check out the customization group

       M-x customize-group RET yasnippet RET

  If you use the customization group to set variables
  `yas/snippet-dirs' or `yas/global-mode', make sure the path to
  \"yasnippet.el\" is present in the `load-path' *before* the
  `custom-set-variables' is executed in your .emacs file.

  For more information and detailed usage, refer to the project page:
     http://code.google.com/p/yasnippet/")
